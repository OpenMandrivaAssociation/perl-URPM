diff --git a/URPM/Resolve.pm b/URPM/Resolve.pm
index 7553116..55a7405 100644
--- a/URPM/Resolve.pm
+++ b/URPM/Resolve.pm
@@ -88,15 +88,15 @@ sub find_candidate_packages {
 		my $pkg = $urpm->{depslist}[$_];
 
                 # Do not select packages if newer version of it is already installed
-                my $should_select = 1;
-                my $db->traverse_tag('name', [ $pkg->name ], sub {
-                    my ($p) = @_;
-                    if( URPM::rpmEVRcompare($p->EVR, $pkg->EVR) > 0 ) {
-                        $should_select = 0;
-                    }
-                });
-
-                $should_select or next;
+                #my $should_select = 1;
+                #$db->traverse_tag('name', [ $pkg->name ], sub {
+                #    my ($p) = @_;
+                #    if( URPM::rpmEVRcompare($p->EVR, $pkg->EVR) > 0 ) {
+                #        $should_select = 0;
+                #    }
+                #});
+#
+                #$should_select or next;
 		$pkg->flag_skip and next;
 		$pkg->is_arch_compat or next;
 		$o_rejected && exists $o_rejected->{$pkg->fullname} and next;
@@ -553,7 +553,7 @@ sub unsatisfied_requires {
 	    my $satisfied = 0;
 	    my @available_pkgs;
 	    if ($choosen_force_req_update) {
-		foreach ( find_candidate_packages($urpm, $db, $n) ) {
+		foreach ( find_candidate_packages($urpm, $n) ) {
 		    if (is_package_installed($db, $_)) {
 			push @available_pkgs, $_;
 		    }
@@ -644,7 +644,7 @@ sub backtrack_selected {
 
 	    #- search for all possible packages, first is to try the selection, then if it is
 	    #- impossible, backtrack the origin.
-	    my @packages = find_candidate_packages($urpm, $db, $dep->{required});
+	    my @packages = find_candidate_packages($urpm, $dep->{required});
 
 	    foreach (@packages) {
 		    #- avoid dead loop.
@@ -1012,7 +1012,7 @@ sub resolve_requested__no_suggests {
 
     foreach (keys %$requested) {
 	#- keep track of requested packages by propating the flag.
-	foreach (find_candidate_packages($urpm, $db, $_)) {
+	foreach (find_candidate_packages($urpm,  $_)) {
 	    $_->set_flag_requested;
 	}
     }
@@ -1346,7 +1346,7 @@ sub _handle_diff_provides {
 	#- try if upgrading the package will be satisfying all the requires...
 	#- there is no need to avoid promoting epoch as the package examined is not
 	#- already installed.
-	my @packages = find_candidate_packages($urpm, $db, $p->name, $state->{rejected});
+	my @packages = find_candidate_packages($urpm, $p->name, $state->{rejected});
 	@packages = 
 	  grep { ($_->name eq $p->name ? $p->compare_pkg($_) < 0 :
 		    $_->obsoletes_overlap($p->name . " == " . $p->EVR))
@@ -1366,7 +1366,7 @@ sub _handle_diff_provides {
 	    #- there exists enough packages that provided the unsatisfied requires.
 	    my @best;
 	    foreach (@unsatisfied) {
-		my @packages = find_candidate_packages($urpm, $db, $_, $state->{rejected});
+		my @packages = find_candidate_packages($urpm, $_, $state->{rejected});
 		if (@packages = grep { $_->fullname ne $p->fullname } @packages) {
 		    push @best, join('|', map { $_->id } @packages);
 		}
@@ -1405,7 +1405,7 @@ sub _handle_conflict {
     #- the existing package will conflict with the selection; check
     #- whether a newer version will be ok, else ask to remove the old.
     my $need_deps = $p->name . " > " . $p->EVR;
-    my @packages = grep { $_->name eq $p->name } find_candidate_packages($urpm, $db, $need_deps, $state->{rejected});
+    my @packages = grep { $_->name eq $p->name } find_candidate_packages($urpm, $need_deps, $state->{rejected});
     @packages = grep { ! $_->provides_overlap($property) } @packages;
 
     if (!@packages) {
